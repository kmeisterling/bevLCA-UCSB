geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
labs(
x ="Beverage Category",
y = "thousand liters / yr",
title = "Beverages purchased at UCSB") +
theme(
text = element_text(size=14),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
strip.placement = "outside")
flow_scl %>%
left_join(contNames) %>%
group_by(scen, bev_type, cont_name) %>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
mutate(scen = recode(scen, scen0 = "Baseline")) %>%
#  mutate(bev_type = recode(bev_type, "Water, UCSB" = "Water, tap")) %>%
#  select(!vol) %>%
ggplot() + theme_bw() +
geom_col(aes(y = vol_kL, x = bev_type, fill = cont_name),
width = 0.8) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
facet_grid(rows = vars(scen),
scales = "free_y",
switch = "y") +
labs(
x ="Beverage Category",
y = "thousand liters / yr",
fill = "container\ntype") +
theme(
text = element_text(size=14),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
strip.placement = "outside") +
scale_fill_brewer(palette = "Dark2")
flow_scl %>%
#  group_by(scen, cont_type, bev_type) %>%
group_by(across(c(-SSB_status, -vol_kL)))%>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
pivot_wider(names_from = bev_type, values_from = vol_kL) %>%
mutate(scen = recode(scen, scen0 = "Baseline")) %>%
arrange(cont_type) %>%
arrange(scen) %>%
replace(is.na(.), 0) %>%
write_csv("./data/data_tbls/flow_kL_bc_allscen.csv")
imp_temp <- read_csv("./data/data_gen/imp_bsc_allscen.csv")
## Rescale impact values
imp_scl <- imp_temp %>%
mutate(
value = case_when(
impact_type == "ghg" ~ value / 10^6,
impact_type == "h2o" ~ value / 10^6,
impact_type == "plastic" ~ value / 10^3
))
#View(imp_scl)
remove(imp_temp)
temp_s0 <- imp_scl %>%
#  select(-impact_type) %>%
filter(scen == "scen0") %>%
filter(bev_type != "water_ucsb")
## Make a "hack" to give SSB impacts = 0 for water bev types
# For aesthetic and plot readability reasons
h1 <- temp_s0 %>%
filter(bev_type == "water_bottled")%>%
mutate(SSB_status = "SSB") %>%
mutate(value = 0)
imp_s0 <- temp_s0 %>%
bind_rows(h1) %>%
group_by(bev_type, SSB_status, item, impact_type) %>%
summarize(value = sum(value)) %>%
ungroup()
#View(imp_s0)
remove(h1)
remove(temp_s0)
## Make sure column names are same as the "names" file (up next)
imp_s0 <- imp_s0 %>%
rename(imp_type = impact_type) %>%
filter(bev_type != "Water, Filtered tap") %>%
mutate(item = recode(item, bev = "beverage", cont = "container"))
impact_Pdata_temp <- imp_s0 %>%
left_join(bevNames)
impact_Pdata <- impact_Pdata_temp %>%
left_join(impNames)
remove(impact_Pdata_temp)
FIG4 <- imp_s0 %>%
filter(bev_type != "Water, Filtered tap") %>%
mutate(item = recode(item, bev = "beverage", cont = "container")) %>%
ggplot() + theme_bw() +
geom_col(aes(y = value, x = SSB_status, fill = item),
width = 0.8) +
facet_grid(vars(impact_name),
vars(bev_type),
#             switch = "y",
scales = "free"
) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
xlab("") +
ylab("") +
theme(
text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.title=element_blank(),
legend.text=element_text(size=18),
panel.border = element_blank(),
strip.placement = "outside",
legend.position = c(0.93, 0.25),
legend.key.size = unit(1, 'cm'),
legend.box.background = element_rect(colour = "black"),
#    strip.text = element_markdown(),
strip.text.y = element_markdown(size = 12)
) +
scale_fill_manual(values = col_vir1)
FIG4 <- imp_s0 %>%
filter(bev_type != "Water, Filtered tap") %>%
mutate(item = recode(item, bev = "beverage", cont = "container")) %>%
ggplot() + theme_bw() +
geom_col(aes(y = value, x = SSB_status, fill = item),
width = 0.8) +
facet_grid(vars(imp_regex_abs),
vars(bev_regex),
switch = "y",
scales = "free",
labeller = label_parsed
) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
xlab("") +
ylab("") +
theme(
text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.title=element_blank(),
legend.text=element_text(size=18),
panel.border = element_blank(),
strip.placement = "outside",
legend.position = c(0.93, 0.25),
legend.key.size = unit(1, 'cm'),
legend.box.background = element_rect(colour = "black")
#    strip.text = element_markdown()
) +
scale_fill_manual(values = col_vir1)
FIG4 <- impact_Pdata %>%
ggplot() + theme_bw() +
geom_col(aes(y = value, x = SSB_status, fill = item),
width = 0.8) +
facet_grid(vars(imp_regex_abs),
vars(bev_regex),
switch = "y",
scales = "free",
labeller = label_parsed
) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
xlab("") +
ylab("") +
theme(
text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.title=element_blank(),
legend.text=element_text(size=18),
panel.border = element_blank(),
strip.placement = "outside",
legend.position = c(0.93, 0.25),
legend.key.size = unit(1, 'cm'),
legend.box.background = element_rect(colour = "black")
#    strip.text = element_markdown()
) +
scale_fill_manual(values = col_vir1)
#  scale_fill_brewer(palette = "Dark2")
FIG4
FIG4
ggsave("./figs/figsTest/FIG4_imp_ibs_scen0.pdf", width=13, height=8, units="in")
## BW version
FIG4 +
scale_fill_grey(
start = 0.7,
end = 0.4)
#View(imp_s0)
imp_s0 %>%
pivot_wider(names_from = bev_type, values_from = value) %>%
relocate(impact_name) %>%
arrange(impact_name) %>%
write_csv("./data/data_tbls/imp_ibs_scen0.csv")
View(impact_Pdata)
View(imp_s0)
# imp_i_allscen -------------------------------------------------------
View(imp_scl)
imp_temp <- read_csv("./data/data_gen/imp_bsc_allscen.csv") %>%
rename(imp_type = impact_type)
imp_s0 <- temp_s0 %>%
bind_rows(h1) %>%
group_by(bev_type, SSB_status, item, imp_type) %>%
summarize(value = sum(value)) %>%
ungroup()
library(tidyverse)
# Colors --
col_vir1 <- c("beverage" = "#21908C", "container" = "#440154")
col_bev <- c("#21908C")
col_cont <- c("#440154")
imp_temp <- read_csv("./data/data_gen/imp_bsc_allscen.csv") %>%
rename(imp_type = impact_type) %>%
#View(imp_temp)
## Rescale impact values
imp_scl <- imp_temp %>%
mutate(
value = case_when(
imp_type == "ghg" ~ value / 10^6,
imp_type == "h2o" ~ value / 10^6,
imp_type == "plastic" ~ value / 10^3
))
imp_temp <- read_csv("./data/data_gen/imp_bsc_allscen.csv") %>%
rename(imp_type = impact_type) %>%
#View(imp_temp)
## Rescale impact values
imp_scl <- imp_temp %>%
mutate(
value = case_when(
imp_type == "ghg" ~ value / 10^6,
imp_type == "h2o" ~ value / 10^6,
imp_type == "plastic" ~ value / 10^3
))
imp_temp <- read_csv("./data/data_gen/imp_bsc_allscen.csv") %>%
rename(imp_type = impact_type)
## Rescale impact values
imp_scl <- imp_temp %>%
mutate(
value = case_when(
imp_type == "ghg" ~ value / 10^6,
imp_type == "h2o" ~ value / 10^6,
imp_type == "plastic" ~ value / 10^3
))
#View(imp_scl)
remove(imp_temp)
temp_s0 <- imp_scl %>%
#  select(-impact_type) %>%
filter(scen == "scen0") %>%
filter(bev_type != "water_ucsb")
## Make a "hack" to give SSB impacts = 0 for water bev types
# For aesthetic and plot readability reasons
h1 <- temp_s0 %>%
filter(bev_type == "water_bottled")%>%
mutate(SSB_status = "SSB") %>%
mutate(value = 0)
imp_s0 <- temp_s0 %>%
bind_rows(h1) %>%
group_by(bev_type, SSB_status, item, imp_type) %>%
summarize(value = sum(value)) %>%
ungroup()
#View(imp_s0)
remove(h1)
remove(temp_s0)
imp_s0_1 <- temp_s0 %>%
bind_rows(h1) %>%
group_by(bev_type, SSB_status, item, imp_type) %>%
summarize(value = sum(value)) %>%
ungroup()
temp_s0 <- imp_scl %>%
#  select(-impact_type) %>%
filter(scen == "scen0") %>%
filter(bev_type != "water_ucsb")
## Make a "hack" to give SSB impacts = 0 for water bev types
# For aesthetic and plot readability reasons
h1 <- temp_s0 %>%
filter(bev_type == "water_bottled")%>%
mutate(SSB_status = "SSB") %>%
mutate(value = 0)
imp_s0_1 <- temp_s0 %>%
bind_rows(h1) %>%
group_by(bev_type, SSB_status, item, imp_type) %>%
summarize(value = sum(value)) %>%
ungroup()
#View(imp_s0)
remove(h1)
remove(temp_s0)
## Make sure column names are same as the "names" file (up next)
imp_s0 <- imp_s0_1 %>%
filter(bev_type != "Water, Filtered tap") %>%
mutate(item = recode(item, bev = "beverage", cont = "container"))
View(imp_s0_1)
remove(h1)
remove(temp_s0)
temp_s0 <- imp_scl %>%
#  select(-impact_type) %>%
filter(scen == "scen0") %>%
filter(bev_type != "water_ucsb")
## Make a "hack" to give SSB impacts = 0 for water bev types
# For aesthetic and plot readability reasons
h1 <- temp_s0 %>%
filter(bev_type == "water_bottled")%>%
mutate(SSB_status = "SSB") %>%
mutate(value = 0)
imp_s0_1 <- temp_s0 %>%
bind_rows(h1) %>%
group_by(bev_type, SSB_status, item, imp_type) %>%
summarize(value = sum(value)) %>%
ungroup()
remove(h1)
remove(temp_s0)
## Make sure column names are same as the "names" file (up next)
imp_s0 <- imp_s0_1 %>%
filter(bev_type != "Water, Filtered tap") %>%
mutate(item = recode(item, bev = "beverage", cont = "container"))
View(imp_s0)
library(tidyverse)
# Colors --
col_vir1 <- c("beverage" = "#21908C", "container" = "#440154")
col_bev <- c("#21908C")
col_cont <- c("#440154")
bevNames_temp <- read_csv("./data/bevtype_list_name.csv")
#View(bevNames_temp)
bevNames <- bevNames_temp %>%
mutate(bev_regex = bev_name) %>%
#  mutate(bev_regex = str_replace(bev_regex, "+ ", "+~")) %>%
mutate(bev_regex = str_replace(bev_regex, " ", "~")) %>%
mutate(bev_regex = str_replace(bev_regex, ",", "*','*"))
remove(bevNames_temp)
contNames <- read_csv("./data/conttype_list_name.csv")
#View(contNames)
impNames <- read_csv("./data/imptype_list_name.csv")
View(impNames)
View(c1)
library(tidyverse)
# Colors --
col_vir1 <- c("beverage" = "#21908C", "container" = "#440154")
col_bev <- c("#21908C")
col_cont <- c("#440154")
bevNames_temp <- read_csv("./data/bevtype_list_name.csv")
#View(bevNames_temp)
bevNames <- bevNames_temp %>%
mutate(bev_regex = bev_name) %>%
#  mutate(bev_regex = str_replace(bev_regex, "+ ", "+~")) %>%
mutate(bev_regex = str_replace(bev_regex, " ", "~")) %>%
mutate(bev_regex = str_replace(bev_regex, ",", "*','*"))
remove(bevNames_temp)
contNames <- read_csv("./data/conttype_list_name.csv")
impNames <- read_csv("./data/imptype_list_name.csv")
flow_s0 <- read_csv("./data/flow_dbsc_scen0.csv") %>%
mutate(vol_kL = vol/1000) %>%   # Resacle as-consumed volume
select(!vol) %>%
left_join(bevNames)
View(flow_s0)
View(flow_s0)
flow_s0 <- read_csv("./data/flow_dbsc_scen0.csv") %>%
mutate(vol_kL = vol/1000) %>%   # Resacle as-consumed volume
select(!vol) %>%
left_join(bevNames, by = "bev_type")
flow_s0 <- read_csv("./data/flow_dbsc_scen0.csv") %>%
mutate(vol_kL = vol/1000) %>%   # Resacle as-consumed volume
select(!vol)
flow_s0 <- read_csv("./data/flow_dbsc_scen0.csv") %>%
mutate(vol_kL = vol/1000) %>%   # Resacle as-consumed volume
select(!vol) %>%
left_join(bevNames)
flow_s0 <- read_csv("./data/flow_dbsc_scen0.csv") %>%
mutate(vol_kL = vol/1000) %>%   # Resacle as-consumed volume
select(!vol) %>%
left_join(bevNames, by = "bev_type") %>%
left_join(contNames)
flow_s0 <- read_csv("./data/flow_dbsc_scen0.csv") %>%
mutate(vol_kL = vol/1000) %>%   # Resacle as-consumed volume
select(!vol)
flow_s0_withtotal <- flow_s0 %>% # for vol fig, we want a row with distrib = "total"
group_by(bev_type, SSB_status, cont_type) %>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
mutate(distrib = "Dining + Vending") %>%
mutate(bev_type = fct_reorder(bev_type, vol_kL, .fun = (sum), .desc =  TRUE))
flow_s0_withtotal <- flow_s0 %>% # for vol fig, we want a row with distrib = "total"
group_by(bev_type, SSB_status, cont_type) %>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
mutate(distrib = "Dining + Vending") %>%
mutate(bev_type = fct_reorder(bev_type, vol_kL, .fun = (sum), .desc =  TRUE))
flow_s0_dinvend <- flow_s0 %>% # for vol fig, we want a row with distrib = "total"
group_by(bev_type, SSB_status, cont_type) %>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
mutate(distrib = "Dining + Vending") %>%
mutate(bev_type = fct_reorder(bev_type, vol_kL, .fun = (sum), .desc =  TRUE))
# Make table for plotting with distrib = 'total', "vend", and "dining"
flow_s0_fig <- flow_s0 %>%
#  mutate(bev_type = fct_reorder(bev_type, vol_kL, .fun = (sum), .desc =  TRUE)) %>%
bind_rows(flow_s0_dinvend) %>%
mutate(distrib = factor(distrib, levels=c("Dining + Vending", "dining", "vending"))) %>%
mutate(SSB_status = as_factor(SSB_status)) %>%
mutate(SSB_status = fct_rev(SSB_status)) %>%
write_csv("./data/data_tbls/vol_scen0_dbsc_DATA.csv")
library(tidyverse)
# Colors --
col_vir1 <- c("beverage" = "#21908C", "container" = "#440154")
col_bev <- c("#21908C")
col_cont <- c("#440154")
bevNames_temp <- read_csv("./data/bevtype_list_name.csv")
#View(bevNames_temp)
bevNames <- bevNames_temp %>%
mutate(bev_regex = bev_name) %>%
#  mutate(bev_regex = str_replace(bev_regex, "+ ", "+~")) %>%
mutate(bev_regex = str_replace(bev_regex, " ", "~")) %>%
mutate(bev_regex = str_replace(bev_regex, ",", "*','*"))
#View(bevNames)
remove(bevNames_temp)
contNames <- read_csv("./data/conttype_list_name.csv")
impNames <- read_csv("./data/imptype_list_name.csv")
flow_s0 <- read_csv("./data/flow_dbsc_scen0.csv") %>%
mutate(vol_kL = vol/1000) %>%   # Resacle as-consumed volume
select(!vol)
flow_s0 <- read_csv("./data/flow_dbsc_scen0.csv") %>%
mutate(vol_kL = vol/1000) %>%   # Resacle as-consumed volume
select(!vol)
flow_s0_din_vend <- flow_s0 %>% # for vol fig, we want a row with distrib = "total"
group_by(bev_type, SSB_status, cont_type) %>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
mutate(distrib = "Dining + Vending") %>%
mutate(bev_type = fct_reorder(bev_type, vol_kL, .fun = (sum), .desc =  TRUE))
# Make table for plotting with distrib = 'total', "vend", and "dining"
flow_s0_fig <- flow_s0 %>%
#  mutate(bev_type = fct_reorder(bev_type, vol_kL, .fun = (sum), .desc =  TRUE)) %>%
bind_rows(flow_s0_din_vend) %>%
mutate(distrib = factor(distrib, levels=c("Dining + Vending", "dining", "vending"))) %>%
mutate(SSB_status = as_factor(SSB_status)) %>%
mutate(SSB_status = fct_rev(SSB_status))
View(flow_s0_fig)
remove(flow_s0_din_vend)
FIG1 <- flow_s0_fig %>%
left_join(contNames) %>%
ggplot() + theme_bw() +
geom_col(aes(y = vol_kL, x = bev_type, fill = cont_name), width = 0.8) +
facet_grid(rows = vars(distrib),
cols = vars(SSB_status),
switch = "y") +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
labs(
x ="Beverage Category",
y = "thousand liters / yr",
fill = "container \ntype") +
theme(
text = element_text(size=14),
axis.text.x = element_text(angle = 45, hjust = 1),
#    legend.text = element_text(size = 16),
#    axis.text.y = element_text(size = 16),
panel.border = element_blank(),
strip.placement = "outside") +
scale_fill_brewer(palette = "Dark2")
FIG1
FIG1 <- flow_s0_fig %>%
left_join(contNames) %>%
left_join(bevNames) %>%
ggplot() + theme_bw() +
geom_col(aes(y = vol_kL, x = bev_name, fill = cont_name), width = 0.8) +
facet_grid(rows = vars(distrib),
cols = vars(SSB_status),
switch = "y") +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
labs(
x ="Beverage Category",
y = "thousand liters / yr",
fill = "container\ntype") +
theme(
text = element_text(size=14),
axis.text.x = element_text(angle = 45, hjust = 1),
#    legend.text = element_text(size = 16),
#    axis.text.y = element_text(size = 16),
panel.border = element_blank(),
strip.placement = "outside") +
scale_fill_brewer(palette = "Dark2")
FIG1
ggsave("./figs/figsTest/FIG1_vol_scen0_dbsc.pdf", width=8.5, height=8.5, units="in")
## Make B&W version
FIG1 +
scale_fill_grey()
ggsave("./figs/figsTest/figsBW/FIG1bw_vol_scen0_dbsc.pdf", width=8.5, height=8.5, units="in")
## Table for SUPP
View(flow_s0_fig)
library(tidyverse)
# Colors --
col_vir1 <- c("beverage" = "#21908C", "container" = "#440154")
col_bev <- c("#21908C")
col_cont <- c("#440154")
bevNames_temp <- read_csv("./data/bevtype_list_name.csv")
#View(bevNames_temp)
bevNames <- bevNames_temp %>%
mutate(bev_regex = bev_name) %>%
#  mutate(bev_regex = str_replace(bev_regex, "+ ", "+~")) %>%
mutate(bev_regex = str_replace(bev_regex, " ", "~")) %>%
mutate(bev_regex = str_replace(bev_regex, ",", "*','*"))
#View(bevNames)
remove(bevNames_temp)
contNames <- read_csv("./data/conttype_list_name.csv")
impNames <- read_csv("./data/imptype_list_name.csv")
flow_s0 <- read_csv("./data/flow_dbsc_scen0.csv") %>%
mutate(vol_kL = vol/1000) %>%   # Resacle as-consumed volume
select(!vol)
## Make tibble with "total" (to add to figure)
flow_s0_din_vend <- flow_s0 %>% # for vol fig, we want a row with distrib = "total"
group_by(bev_type, SSB_status, cont_type) %>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
mutate(distrib = "Dining + Vending")
# Make table for plotting with distrib = 'total', "vend", and "dining"
flow_s0_fig <- flow_s0 %>%
bind_rows(flow_s0_din_vend) %>%
mutate(distrib = factor(distrib, levels=c("Dining + Vending", "dining", "vending"))) %>%
mutate(SSB_status = as_factor(SSB_status)) %>%
mutate(SSB_status = fct_rev(SSB_status))
View(flow_s0_fig)
