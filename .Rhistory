pivot_longer(
cols = ghg:plastic,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "cont", .before = "value")
cont_imp_allscen <- bind_rows(xBinB, BinB) %>%
arrange(scen, bev_type, cont_type)
imp_allscen <- bind_rows(bev_imp_allscen, cont_imp_allscen) %>%
write_csv("./data/data_gen/imp_bsc_allscen.csv")
imp_allscen <- bind_rows(bev_imp_allscen, cont_imp_allscen) %>%
write_csv("./data/data_gen/imp_bsc_allscen.csv")
library(tidyverse)
# Read data & clean up ---------------------------------------------------------------
cont_imp_l <- read_csv("./data/cont_imp_l.csv")
binb_imp_l <- read_csv("./data/cont_imp_l_binb.csv")   # per liter of beverage volume, as drunk
bev_imp_l <- read_csv("./data/bev_imp_l.csv")     # per liter of beverage volume, as drunk
flow <- read_csv("./data/flow_bsc_allscen.csv")   # "vol" is liter of beverage, as drunk
bev_name <- read_csv("./data/bevtype_list_name.csv")  # List of the beverage types in the dataset
bev_imp_allscen <- flow %>%
left_join(bev_imp_l) %>%
mutate(across(ghg:h2o, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:h2o,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "bev", .before = "value")
xBinB <- flow %>%   # Not including BinB (needs custom treatment)
filter(cont_type != "bag_in_box") %>%
left_join(cont_imp_l) %>%
mutate(across(ghg:plastic, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:plastic,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "cont", .before = "value")
BinB <- flow %>%
filter(cont_type == "bag_in_box") %>%
left_join(binb_imp_l) %>%    #!!!! What if these don't have all matches?
mutate(across(ghg:plastic, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:plastic,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "cont", .before = "value")
cont_imp_allscen <- bind_rows(xBinB, BinB) %>%
arrange(scen, bev_type, cont_type)
imp_allscen <- bind_rows(bev_imp_allscen, cont_imp_allscen) %>%
write_csv("./data/data_gen/imp_bsc_allscen.csv")
imp_allscen %>%
write_csv("../bevLCA-UCSB-private/data_gen/imp_bsc_allscen_2.csv")
imp_allscen %>%
write_csv("../bevLCA-UCSB_private/data_gen/imp_bsc_allscen_2.csv")
library(tidyverse)
# Read data & clean up ---------------------------------------------------------------
cont_imp_l <- read_csv("./data/cont_imp_l.csv")
binb_imp_l <- read_csv("./data/cont_imp_l_binb.csv")   # per liter of beverage volume, as drunk
bev_imp_l <- read_csv("./data/bev_imp_l.csv")     # per liter of beverage volume, as drunk
flow <- read_csv("./data/flow_bsc_allscen.csv")   # "vol" is liter of beverage, as drunk
bev_name <- read_csv("./data/bevtype_list_name.csv")  # List of the beverage types in the dataset
bev_imp_allscen <- flow %>%
left_join(bev_imp_l) %>%
mutate(across(ghg:h2o, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:h2o,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "bev", .before = "value")
xBinB <- flow %>%   # Not including BinB (needs custom treatment)
filter(cont_type != "bag_in_box") %>%
left_join(cont_imp_l) %>%
mutate(across(ghg:plastic, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:plastic,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "cont", .before = "value")
BinB <- flow %>%
filter(cont_type == "bag_in_box") %>%
left_join(binb_imp_l) %>%    #!!!! What if these don't have all matches?
mutate(across(ghg:plastic, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:plastic,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "cont", .before = "value")
cont_imp_allscen <- bind_rows(xBinB, BinB) %>%
arrange(scen, bev_type, cont_type)
imp_allscen <- bind_rows(bev_imp_allscen, cont_imp_allscen) %>%
write_csv("./data/data_gen/imp_bsc_allscen.csv")
library(tidyverse)
# Colors --
col_vir1 <- c("beverage" = "#21908C", "container" = "#440154")
col_bev <- c("#21908C")
col_cont <- c("#440154")
# BIG impacts (tonnes, M liter, kg)
impnames <- c(
ghg = "Climate\n[ t CO2eq (100yr) ]",
h2o = "Water Use\n[ M Liter (Blue) ]",
plastic = "Plastic Pollution\n[ kg plastic ]"
)
# Impacts per liter
impname_l <- c(
ghg = "Climate\n[ g CO2eq / liter ]",
h2o = "Water Use\n[ liter (Blue) / liter ]",
plastic = "Plastic Pollution\n[ g plastic / liter ]"
)
bev_names <- read_csv("./data/bevtype_list_name.csv")
#View(bev_names)
cont_names <- read_csv("./data/conttype_list_name.csv")
#View(cont_names)
impact_names <- read_csv("./data/imptype_list_name.csv")
flow_s0 <- read_csv("./data/flow_dbsc_scen0.csv") %>%
mutate(vol_kL = vol/1000) %>%   #Resacle values
select(!vol) %>%
left_join(bev_names) %>%
select(!bev_type) %>%
rename(bev_type = bev_name) %>%
write_csv("./tbls/flow_dbsc_scen0_scaled.csv")
flow_s0 <- read_csv("./data/flow_dbsc_scen0.csv") %>%
mutate(vol_kL = vol/1000) %>%   #Resacle values
select(!vol) %>%
left_join(bev_names) %>%
select(!bev_type) %>%
rename(bev_type = bev_name) %>%
write_csv("./tbls/flow_dbsc_scen0_scaled.csv")
flow_s0 <- read_csv("./data/flow_dbsc_scen0.csv") %>%
mutate(vol_kL = vol/1000) %>%   #Resacle values
select(!vol) %>%
left_join(bev_names) %>%
select(!bev_type) %>%
rename(bev_type = bev_name) %>%
write_csv("./data/data_tbls/flow_dbsc_scen0_scaled.csv")
temp0 <- flow_s0 %>% # for vol fig, we want a row with distrib = "total"
group_by(bev_type, SSB_status, cont_type) %>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
mutate(distrib = "Dining + Vending") %>%
mutate(bev_type = fct_reorder(bev_type, vol_kL, .fun = (sum), .desc =  TRUE))
# Make table for plotting with distrib = 'total', "vend", and "dining"
flow_s0_fig <- flow_s0 %>%
#  mutate(bev_type = fct_reorder(bev_type, vol_kL, .fun = (sum), .desc =  TRUE)) %>%
bind_rows(temp0) %>%
mutate(distrib = factor(distrib, levels=c("Dining + Vending", "dining", "vending"))) %>%
mutate(SSB_status = as_factor(SSB_status)) %>%
mutate(SSB_status = fct_rev(SSB_status)) %>%
write_csv("./data/data_tbls/vol_scen0_dbsc_DATA.csv")
flow_s0_fig %>%
ggplot() + theme_bw() +
geom_col(aes(y = vol_kL, x = bev_type, fill = cont_type), width = 0.8) +
facet_grid(rows = vars(distrib),
cols = vars(SSB_status),
switch = "y") +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
labs(
x ="Beverage Category",
y = "thousand liters / yr",
fill = "container \ntype") +
theme(
text = element_text(size=14),
axis.text.x = element_text(angle = 45, hjust = 1),
#    legend.text = element_text(size = 16),
#    axis.text.y = element_text(size = 16),
panel.border = element_blank(),
strip.placement = "outside") +
scale_fill_brewer(palette = "Dark2")
ggsave("./figs/vol_scen0_dbsc.pdf", width=8.5, height=8.5, units="in")
#Scale the Flow data for allscen (not including distrib)
flow_scl <- read_csv("./data_gen/flow_bsc_allscen.csv") %>%
mutate(vol_kL = vol/1000) %>%   #Resacle values
select(!vol) %>%
left_join(bev_names) %>%
select(!bev_type) %>%
rename(bev_type = bev_name)
# !!! Test that all scenarios have same volume
flow_scl %>%
group_by(scen) %>%
summarize(TOTAL = sum(vol_kL))
#Scale the Flow data for allscen (not including distrib)
flow_scl <- read_csv("./data/flow_bsc_allscen.csv") %>%
mutate(vol_kL = vol/1000) %>%   #Resacle values
select(!vol) %>%
left_join(bev_names) %>%
select(!bev_type) %>%
rename(bev_type = bev_name)
# !!! Test that all scenarios have same volume
flow_scl %>%
group_by(scen) %>%
summarize(TOTAL = sum(vol_kL))
flow_0 <- flow_scl %>%
filter(scen == "scen0") %>%
mutate(bev_type = fct_reorder(bev_type, vol_kL, .fun = (sum), .desc =  TRUE))
## By bev type, cont type, and SSB status
flow_0 %>%
group_by(bev_type, SSB_status, cont_type) %>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
filter(bev_type != "Water, Filtered tap") %>%
ggplot() + theme_bw() +
geom_col(aes(y = vol_kL, x = bev_type, fill = cont_type), width = 0.8) +
facet_wrap(vars(SSB_status)) +
#             cols = vars(distrib),
#             switch = "y")
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
labs(
x ="Beverage Category",
y = "thousand liters / yr") +
#    title = "Beverages purchased at UCSB") +
theme(
text = element_text(size=14),
axis.text.x = element_text(angle = 45, hjust = 1),
#    legend.text = element_text(size = 16),
#    axis.text.y = element_text(size = 16),
panel.border = element_blank(),
strip.placement = "outside") +
scale_fill_brewer(palette = "Dark2")
ggsave("./figs/vol_scen0_bsc.pdf", width=8.5, height=7, units="in")
flow_0 %>%
group_by(bev_type, SSB_status) %>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
filter(bev_type != "Water, Filtered tap") %>%
ggplot() + theme_bw() +
geom_col(aes(y = vol_kL, x = bev_type, fill = SSB_status), width = 0.8) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
labs(
x ="Beverage Category",
y = "thousand liters / yr",
title = "Beverages purchased at UCSB") +
theme(
text = element_text(size=14),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
strip.placement = "outside")
ggsave("./figs/vol_scen0_bs.pdf", width=7, height=4, units="in")
flow_scl %>%
group_by(scen, bev_type, cont_type) %>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
mutate(scen = recode(scen, scen0 = "Baseline")) %>%
#  mutate(bev_type = recode(bev_type, "Water, UCSB" = "Water, tap")) %>%
#  select(!vol) %>%
ggplot() + theme_bw() +
geom_col(aes(y = vol_kL, x = bev_type, fill = cont_type),
width = 0.8) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
facet_grid(rows = vars(scen),
scales = "free_y",
switch = "y") +
labs(
x ="Beverage Category",
y = "thousand liters / yr",
fill = "container\ntype") +
theme(
text = element_text(size=14),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
strip.placement = "outside") +
scale_fill_brewer(palette = "Dark2")
ggsave("./figs/vol_bc_allscen.pdf", width=9, height=11, units = "in")
flow_scl %>%
#  group_by(scen, cont_type, bev_type) %>%
group_by(across(c(-SSB_status, -vol_kL)))%>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
pivot_wider(names_from = bev_type, values_from = vol_kL) %>%
mutate(scen = recode(scen, scen0 = "Baseline")) %>%
arrange(cont_type) %>%
arrange(scen) %>%
replace(is.na(.), 0) %>%
write_csv("./tbls/flow_kL_bc_allscen.csv")
## Impact data
imp <- read_csv("./data/data_gen/imp_bsc_allscen.csv")
flow_scl %>%
#  group_by(scen, cont_type, bev_type) %>%
group_by(across(c(-SSB_status, -vol_kL)))%>%
summarize(vol_kL = sum(vol_kL)) %>%
ungroup() %>%
pivot_wider(names_from = bev_type, values_from = vol_kL) %>%
mutate(scen = recode(scen, scen0 = "Baseline")) %>%
arrange(cont_type) %>%
arrange(scen) %>%
replace(is.na(.), 0) %>%
write_csv("./data/data_tbls/flow_kL_bc_allscen.csv")
## Impact data
imp <- read_csv("./data/data_gen/imp_bsc_allscen.csv")
## Rescale impact values
imp_scl <- read_csv("./data/data_gen/imp_bsc_allscen.csv") %>%
mutate(
value = case_when(
impact_type == "ghg" ~ value / 10^6,
impact_type == "h2o" ~ value / 10^6,
impact_type == "plastic" ~ value / 10^3
)) %>%
left_join(bev_names) %>%
select(!bev_type) %>%
rename(bev_type = bev_name)
## Give impacts nicer names
## Seems like there should be a neater way to do this
## But not now
imp_scl$impact_name <- impnames[
match(imp_scl$impact_type, names(impnames)) ]
# imp_ibs_s0 ----------------------------------------------------------
#View(imp_scl)
temp_s0 <- imp_scl %>%
select(-impact_type) %>%
filter(scen == "scen0") %>%
filter(bev_type != "Water, Filtered tap")
## Make a "hack" to give SSB impacts = 0 for water bev types
## For aesthetic and plot readability reasons
h1 <- temp_s0 %>%
filter(bev_type == "Water, bottled")%>%
mutate(SSB_status = "SSB") %>%
mutate(value = 0)
imp_s0 <- temp_s0 %>%
bind_rows(h1) %>%
group_by(bev_type, SSB_status, item, impact_name) %>%
summarize(value = sum(value)) %>%
ungroup()
imp_s0 %>%
filter(bev_type != "Water, Filtered tap") %>%
mutate(item = recode(item, bev = "beverage", cont = "container")) %>%
ggplot() + theme_bw() +
geom_col(aes(y = value, x = SSB_status, fill = item),
width = 0.8) +
facet_grid(vars(impact_name),
vars(bev_type),
switch = "y",
scales = "free",
labeller = labeller(bev_type = label_wrap_gen(10))
# labeller = labeller(impact_names = label_wrap_gen(20))
) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
xlab("") +
ylab("") +
theme(
text = element_text(size = 14),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
legend.title=element_blank(),
strip.placement = "outside",
legend.position = c(0.93, 0.25),
legend.text=element_text(size=18),
legend.key.size = unit(1, 'cm'),
legend.box.background = element_rect(colour = "black")
) +
scale_fill_manual(values = col_vir1)
#  scale_fill_brewer(palette = "Dark2")
ggsave("./figs/imp_ibs_scen0.pdf", width=13, height=8, units="in")
#View(imp_s0)
imp_s0 %>%
pivot_wider(names_from = bev_type, values_from = value) %>%
relocate(impact_name) %>%
arrange(impact_name) %>%
write_csv("./data/data_tbls/imp_ibs_scen0.csv")
imp_i_allscen <- imp_scl %>%
select(-impact_type) %>%
group_by(scen, item, impact_name) %>%
summarize(value = sum(value)) %>%
ungroup() %>%
mutate(scen = recode(scen, scen0 = "Baseline")) %>%
mutate(item = recode(item, bev = "beverage", cont = "container"))
ggplot() + theme_bw() +
geom_col(data = imp_i_allscen,
aes(y = value, x = scen, fill = item),
width = 0.8) +
facet_grid(rows = vars(impact_name),
switch = "y",
scales = "free"
) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
xlab("") +
ylab("") +
theme(
text = element_text(size = 16),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
strip.placement = "outside",
legend.title=element_blank(),
legend.position = "top",
legend.text=element_text(size=18),
legend.key.size = unit(1, 'cm'),
) +
scale_fill_manual(values = col_vir1)
ggsave("./figs/imp_i_allscen.pdf", width=10, height=10, units="in")
imp_i_allscen %>%
pivot_wider(names_from = scen, values_from = value) %>%
relocate(impact_name) %>%
arrange(impact_name) %>%
write_csv("./data/data_tbls/imp_i_allscen_wide.csv")
imp_is_allscen <- imp_scl %>%
select(-impact_type) %>%
group_by(scen, item, SSB_status, impact_name) %>%
summarize(value = sum(value)) %>%
ungroup()
imp_is_allscen %>%
mutate(scen = recode(scen, scen0 = "Baseline")) %>%
mutate(item = recode(item, bev = "beverage", cont = "container")) %>%
ggplot() + theme_bw() +
geom_col(aes(y = value, x = SSB_status, fill = item),
width = 0.8) +
facet_grid(vars(impact_name),
vars(scen),
switch = "y",
scales = "free",
labeller = label_wrap_gen()
) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.5) +
xlab("") +
ylab("") +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
panel.border = element_blank(),
strip.placement = "outside",
text = element_text(size=14),
legend.title=element_blank()
) +
scale_fill_manual(values = col_vir1)
ggsave("./figs/imp_is_allscen.pdf", width=13, height=8, units="in")
summ_imp_wide <- imp_scl %>%
select(-impact_type) %>%
pivot_wider(names_from = impact_name, values_from = value) %>%
replace(is.na(.), 0)
#View(summ_imp_wide)
write_csv(summ_imp_wide, "./data/data_tbls/imp_bsc_allscen_wide.csv")
imp_i_allscen %>%
group_by(scen, impact_name) %>%
summarize(value = sum(value)) %>%
ungroup() %>%
pivot_wider(names_from = impact_name, values_from = value) %>%
write_csv("./data/data_tbls/imp_allscen.csv")
imp_s0 %>%
group_by(impact_name, item) %>%
summarize(value = sum(value)) %>%
pivot_wider(names_from = item, values_from = value) %>%
replace_na(list(bev = 0)) %>%
write_csv("./data/data_tbls/imp_scen0_summ.csv")
tbl_imp_scen0 <- imp_s0 %>%
group_by(impact_name, item) %>%
summarize(value = sum(value)) %>%
pivot_wider(names_from = item, values_from = value) %>%
replace_na(list(bev = 0)) %>%
write_csv("./data/data_tbls/result_overview.csv")
c1 <- read_csv("./data/cont_imp_l.csv") %>%
left_join(cont_names) %>%
select(!cont_type) %>%
rename(cont_type = cont_name)  %>%
pivot_longer(!cont_type, names_to = "imp_type", values_to = "val")
c1$imp_type <- impname_l[
match(c1$imp_type, names(impname_l)) ]
c1 %>%
ggplot() + theme_bw() +
geom_col(aes(y = val, x = cont_type), width = 0.8, fill = col_cont) +
facet_grid(rows = vars(imp_type),
switch = "y",
scales = "free") +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.4) +
labs(
x ="Container Category",
y = "Impacts per liter of container (no beverage)") +
theme(
text = element_text(size=14),
axis.text.x = element_text(angle = 45, hjust = 1),
#    legend.text = element_text(size = 16),
#    axis.text.y = element_text(size = 16),
panel.border = element_blank(),
strip.placement = "outside")
ggsave("./figs/cont_imp_liter.pdf", width=4, height=8, units="in")
b1 <- read_csv("./data/bev_imp_l.csv") %>%
left_join(bev_names) %>%
select(!bev_type) %>%
rename(bev_type = bev_name)   %>%
pivot_longer(!c("bev_type", "SSB_status"), names_to = "imp_type", values_to = "val")
b1$imp_type <- impname_l[
match(b1$imp_type, names(impname_l)) ]
b1 %>%
drop_na() %>%
filter(bev_type != "Water, tap") %>%
#  mutate(bev_type = recode(bev_type, "Water, UCSB" = "Water, tap")) %>%
ggplot() + theme_bw() +
geom_col(aes(y = val, x = bev_type), width = 0.8, fill = col_bev) +
facet_grid(rows = vars(imp_type),
cols = vars(SSB_status),
switch = "y",
scales = "free") +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0.41) +
labs(
x ="Beverage Category",
y = "Impacts per liter of beverage (no container)") +
theme(
text = element_text(size=14),
axis.text.x = element_text(angle = 45, hjust = 1),
strip.placement = "outside",
#    legend.text = element_text(size = 16),
#    axis.text.y = element_text(size = 16),
panel.border = element_blank() ) +
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific=FALSE))
ggsave("./figs/bev_imp_liter.pdf", width=8, height=8, units="in")
