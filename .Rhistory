library(tidyverse)    #Data management tools
# Sales data for "vending" and "dining" are in different files.
din_all <- read_csv("./data_raw/dining_raw.csv")
library(tidyverse)
# Read data & clean up ---------------------------------------------------------------
cont_imp_l <- read_csv("./data/cont_imp_l.csv")
binb_imp_l <- read_csv("./data/cont_imp_l_binb.csv")   # per liter of beverage volume, as drunk
bev_imp_l <- read_csv("./data/bev_imp_l.csv")     # per liter of beverage volume, as drunk
flow <- read_csv("./data/flow_bsc_allscen.csv")   # "vol" is liter of beverage, as drunk
bev_name <- read_csv("./data/bevtype_list_name.csv")  # List of the beverage types in the dataset
bev_imp_allscen <- flow %>%
left_join(bev_imp_l) %>%
mutate(across(ghg:h2o, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:h2o,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "bev", .before = "value")
xBinB <- flow %>%   # Not including BinB (needs custom treatment)
filter(cont_type != "bag_in_box") %>%
left_join(cont_imp_l) %>%
mutate(across(ghg:plastic, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:plastic,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "cont", .before = "value")
BinB <- flow %>%
filter(cont_type == "bag_in_box") %>%
left_join(binb_imp_l) %>%    #!!!! What if these don't have all matches?
mutate(across(ghg:plastic, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:plastic,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "cont", .before = "value")
cont_imp_allscen <- bind_rows(xBinB, BinB) %>%
arrange(scen, bev_type, cont_type)
imp_allscen <- bind_rows(bev_imp_allscen, cont_imp_allscen) %>%
write_csv("./data/data_gen/imp_bsc_allscen.csv")
imp_allscen <- bind_rows(bev_imp_allscen, cont_imp_allscen) %>%
write_csv("./data/data_gen/imp_bsc_allscen.csv")
library(tidyverse)
# Read data & clean up ---------------------------------------------------------------
cont_imp_l <- read_csv("./data/cont_imp_l.csv")
binb_imp_l <- read_csv("./data/cont_imp_l_binb.csv")   # per liter of beverage volume, as drunk
bev_imp_l <- read_csv("./data/bev_imp_l.csv")     # per liter of beverage volume, as drunk
flow <- read_csv("./data/flow_bsc_allscen.csv")   # "vol" is liter of beverage, as drunk
bev_name <- read_csv("./data/bevtype_list_name.csv")  # List of the beverage types in the dataset
bev_imp_allscen <- flow %>%
left_join(bev_imp_l) %>%
mutate(across(ghg:h2o, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:h2o,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "bev", .before = "value")
xBinB <- flow %>%   # Not including BinB (needs custom treatment)
filter(cont_type != "bag_in_box") %>%
left_join(cont_imp_l) %>%
mutate(across(ghg:plastic, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:plastic,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "cont", .before = "value")
BinB <- flow %>%
filter(cont_type == "bag_in_box") %>%
left_join(binb_imp_l) %>%    #!!!! What if these don't have all matches?
mutate(across(ghg:plastic, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:plastic,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "cont", .before = "value")
cont_imp_allscen <- bind_rows(xBinB, BinB) %>%
arrange(scen, bev_type, cont_type)
imp_allscen <- bind_rows(bev_imp_allscen, cont_imp_allscen) %>%
write_csv("./data/data_gen/imp_bsc_allscen.csv")
imp_allscen %>%
write_csv("../bevLCA-UCSB-private/data_gen/imp_bsc_allscen_2.csv")
imp_allscen %>%
write_csv("../bevLCA-UCSB_private/data_gen/imp_bsc_allscen_2.csv")
library(tidyverse)
# Read data & clean up ---------------------------------------------------------------
cont_imp_l <- read_csv("./data/cont_imp_l.csv")
binb_imp_l <- read_csv("./data/cont_imp_l_binb.csv")   # per liter of beverage volume, as drunk
bev_imp_l <- read_csv("./data/bev_imp_l.csv")     # per liter of beverage volume, as drunk
flow <- read_csv("./data/flow_bsc_allscen.csv")   # "vol" is liter of beverage, as drunk
bev_name <- read_csv("./data/bevtype_list_name.csv")  # List of the beverage types in the dataset
bev_imp_allscen <- flow %>%
left_join(bev_imp_l) %>%
mutate(across(ghg:h2o, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:h2o,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "bev", .before = "value")
xBinB <- flow %>%   # Not including BinB (needs custom treatment)
filter(cont_type != "bag_in_box") %>%
left_join(cont_imp_l) %>%
mutate(across(ghg:plastic, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:plastic,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "cont", .before = "value")
BinB <- flow %>%
filter(cont_type == "bag_in_box") %>%
left_join(binb_imp_l) %>%    #!!!! What if these don't have all matches?
mutate(across(ghg:plastic, ~.x * vol)) %>%
select(!vol) %>%
pivot_longer(
cols = ghg:plastic,
names_to = "impact_type",
values_to = "value") %>%
add_column(item = "cont", .before = "value")
cont_imp_allscen <- bind_rows(xBinB, BinB) %>%
arrange(scen, bev_type, cont_type)
imp_allscen <- bind_rows(bev_imp_allscen, cont_imp_allscen) %>%
write_csv("./data/data_gen/imp_bsc_allscen.csv")
